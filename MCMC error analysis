# for MSEM, diff iccs are considered
options(java.parameters = "-Xmx1024m")
library(MplusAutomation)
library(data.table)
library(ggplot2)
library(xlsx)
library(reshape2)
library(reshape)
library(gridExtra)
library(lattice)
library(dplyr)
# Monte Carlo SE
## function for one parameter
report<-c("m_bias","m_se","m_mse","m_coverage","m_power")
mcse_bias = function(theta,nrep){
  #nrep=length(theta)
  mean_theta = mean(theta)
  mcse = sqrt((1/(nrep*(nrep-1)))*sum((theta - mean_theta)^2))
  return(mcse)
}

mcse_se = function(se, nrep){
  mcse = se/sqrt(2*(nrep-1))
  return(mcse)
}

mcse_mse = function(mse,theta, nrepa){# 
  nrep=length(theta)
  mean_theta = mean(theta)
  mcse = sqrt( sum(((theta-mean_theta)^2-mse)^2) / (nrep*(nrep-1)) )
  return(mcse)
}

mcse_coverage = function(coverage, nrep){
  mcse = sqrt(coverage*(1-coverage)/nrep)
  return(mcse)
}

mcse_power = function(power, nrep){
  mcse = sqrt(power*(1-power)/nrep)
  return(mcse)
}
#==================organize result and write xlsx===========
wdID<-c(1)
studyTypes<-c("study1_aftericc", "study2_aftericc","study3","study4") 
for (s in 3){
studyType <-studyTypes[s]
#wd0<-"C:/Users/TEMP/Desktop/shufang/1 ????/模??????/"
wd0<-"D:/study/current/????/模??????/"
resultwd<-paste(wd0,"AllResults",sep="")
# add=deep {wd + 1(??要????study) +1} + ??????量(????要???????尾??芸???output)
##注??:?募????????锌崭?要+1
add=10+4
#模??????????量
conditions<-6
con<-conditions+3#???锘???朔????木?值偏?啤?强?鹊?

iccs<-c(0.05,0.1,0.2)#
iccLs<-c("005","01","02")#
if(s>=3){
  iccs<-c(0.1,0.2)
  iccLs<-c("01","02")
}
NewEstiLevel<-c("ml","wlsmv","nonif","l_3sd_w","l_1sd_w","cor_w","r_1sd_w","r_3sd_w",
                "l_3sd_m","l_1sd_m","cor_m","r_1sd_m","r_3sd_m","l_3sd_s",
                "l_1sd_s","cor_s","r_1sd_s","r_3sd_s")
#repi??????????
NR<-100
#set wd & param
filt_p<-c("b11","b21","b31","b01","b10","b20","b30")
if (wdID==1){
  wd<-paste(wd0,"??通????/every/",sep="")#
  param<-c("re_yw","b11","b21","b31","b01","b00",
           "b10","b20","b30","re_yb","g10^2","g20^2","g30^2")
  #C for concerned, L for linearly, V for var, N for not important
  #lable<-c("V","C","C","C","C","N",
  #         "L","L","L","V","V","V","V")
  if(s==3){  
    param<-c("b11","b21","b31","b01","b10",
             "b20","b30","b00","re_yb","g10^2","g20^2","g30^2")
    lable<-c("C","C","C","C","L","L","L","L","V","V","V","V")
  }
  if(s==4){ 
    param<-c("b10","b20","b30","b01","b00","re_yb")
    lable<-c("L","L","L","C","N","V")
  }
  Lev2N <- c(20,30,40,50)
  Lev1N <- c(30,60,150)
}
if (wdID==2){
  wd<-paste(wd0,"MSEM/new/",sep="")
  param<-c("l_yw1","l_yw2","l_yw3","l_xw1","l_xw2","l_xw3",
           "var_xij","res_X1","res_X2","res_X3","res_Y1","res_Y2","res_Y3","res_yij",
           "l_yb1","l_yb2","l_yb3","l_xb1","l_xb2","l_xb3",
           "b01","b21","b11","intc_X1","intc_X2","intc_X3","intc_Y1",
           "intc_Y2","intc_Y3","b10","var_xj",
           "res_X1b","res_X2b","res_X3b","res_Y1b","res_Y2b","res_Y3b","res_yj","res_b1j")
  #FLW(B) for factor loadings within(between),T for thred
  lable<-c("FLW","FLW","FLW","FLW","FLW","FLW","V","V","V","V","V","V","V","V",
           "FLB","FLB","FLB","FLB","FLB","FLB","l","C","C","I","I","I","I","I","I","T",
           "V","V","V","V","V","V","V","V","V")
  Lev2N <- c(40,50)
  Lev1N <- c(30,60,150)
}

subname<-function(s,n){
  return(s[1:n])
}
wd1<-paste(wd,studyType,sep="")
setwd(wd1)
  # Single Reps results
  # modelResults<-readModels(wd1,recursive=TRUE,what="parameters")
  setwd(resultwd)
  load(paste0(resultwd,"/",studyType,".Rdata"))
 # save(modelResults,file=paste0(studyType,".Rdata"))
  
  parametersResults <- sapply(modelResults,"[","parameters")
  #find non-converged rep
  converge<-which(sapply(parametersResults,length)==2)
  parametersResults<-parametersResults[converge]
  unstandardResults <- sapply(parametersResults,"[","unstandardized")
  unstandardResults<- as.data.table(unstandardResults)
  
  est<-subset(unstandardResults, select = grep("est$", names(unstandardResults)))
  est2<-stack(est)
  sd<-subset(unstandardResults, select =c(grep("sd$", names(unstandardResults)),
                                          grep("d.se$", names(unstandardResults))))
  sd2<-stack(sd)
  CIResults <- sapply(parametersResults,"[","ci.unstandardized")
  CIResults<- as.data.table(CIResults)
  # remember to check the CI results!!!
  if(s==3){
    CIResults<-CIResults[-1,]
  }
  if(s==4){
    CIResults<-CIResults[-4,]
  }
  # remember to check the CI results!!!
  CIResults[,1]
  CID<-subset(CIResults, select = grep("low2.5", names(CIResults)))
  CID2<-stack(CID)
  CIU<-subset(CIResults, select = grep("up2.5", names(CIResults)))
  CIU2<-stack(CIU)
  
  est2$ind<-as.character(est2$ind)
  outname<-strsplit(est2$ind,"out")
  est2$ind<-t(data.frame(outname)[1,])
  sd2$ind<-as.character(sd2$ind)
  outname<-strsplit(sd2$ind,"out")
  sd2$ind<-t(data.frame(outname)[1,])
  CID2$ind<-as.character(CID2$ind)
  outname<-strsplit(CID2$ind,"out")
  CID2$ind<-t(data.frame(outname)[1,])
  CIU2$ind<-as.character(CIU2$ind)
  outname<-strsplit(CIU2$ind,"out")
  CIU2$ind<-t(data.frame(outname)[1,])
  colnames(est2)[1]<-"est"
  colnames(sd2)[1]<-"sd"
  colnames(CID2)[1]<-"CID"
  colnames(CIU2)[1]<-"CIU"
  est2<-cbind(param,est2)
  sd2<-cbind(param,sd2)
  CIU2<-cbind(param,CIU2)
  CID2<-cbind(param,CID2)
  
  allr<-merge(merge(merge(est2,sd2),CID2),CIU2)
  allr$param<-factor(allr$param,levels=param)
  # =================split filenames and get conditions=============
  filename<-allr$ind
  allr<-select(allr,-ind)
  filename<-lapply(filename,strsplit,"[.]")
  a<-data.frame(filename)
  
  #change Ef, Skew, IccC, L1, L2 if needed
  Ef<-t(a[1+add,])
  Skew<-t(a[2+add,])
  IccC<-t(a[3+add,])
  Icc<-rep(0,length(IccC))
  Icc[which(IccC=="005")]<-rep(0.05,length(IccC[which(IccC=="005")]))
  Icc[which(IccC=="01")]<-rep(0.1,length(IccC[which(IccC=="01")]))
  Icc[which(IccC=="02")]<-rep(0.2,length(IccC[which(IccC=="02")]))
  
  L2C<-t(a[4+add,])
  L2<-rep(0,length(L2C))
  L2[which(L2C=="20")]<-rep(20,length(L2[which(L2C=="20")]))
  L2[which(L2C=="30")]<-rep(30,length(L2[which(L2C=="30")]))
  L2[which(L2C=="40")]<-rep(40,length(L2[which(L2C=="40")]))
  L2[which(L2C=="50")]<-rep(50,length(L2[which(L2C=="50")]))
  
  L1C<-t(a[5+add,])
  L1<-rep(0,length(L1C))
  L1[which(L1C=="30")]<-rep(30,length(L1[which(L1C=="30")]))
  L1[which(L1C=="60")]<-rep(60,length(L1[which(L1C=="60")]))
  L1[which(L1C=="150")]<-rep(150,length(L1[which(L1C=="150")]))
  
  Esti<-t(a[6+add,])
  repi<-t(a[7+add,])
  
  temp<-Esti
  temp<-gsub("cor_","c_0sd_",temp)
  temp<-gsub("ml","999_999_999",temp)
  temp<-gsub("wlsmv","999_999_999",temp)
  temp<-gsub("nonif","888_888_888",temp)
  tempdf<-strsplit(temp,"_")
  priorinf<-as.data.frame(t(as.data.frame(tempdf)))
  direction<-priorinf[,1]
  bias<-priorinf[,2]
  var<-priorinf[,3]
  
  #=====????一?????械?????, get est, se, ci results
  conr<-data.frame(Ef,Skew,Icc,L2,L1,Esti,direction,bias,var,repi)
  allr<-data.frame(conr,allr)
  colnames(allr)<-c("Ef","Skew","Icc","L2","L1","Esti","direction",
                    "bias","var","repi","Para","est","sd","CID","CIU")
  rownames(allr)<-NULL
  ncols<-ncol(allr)
  
  # pop value (different for different conditions)
  re_yw<-NA
  b01 = c(1.5)#,0
  b00 = 0  
  b10 = 2.3  
  b20 = -0.25 
  b30 = -0.75
  b11 = 0.12  
  b21 = -0.05  
  b31 = -0.75 
  re_yb<-NA
  s00=0.5
  pop<-data.frame("pop"=c(re_yw,b11,b21,b31,b01,b00,b10,b20,b30,re_yb,s00,s00,s00))
  pop$Para<-c("re_yw","b11","b21","b31","b01","b00","b10","b20","b30","re_yb",
               "g10^2","g20^2","g30^2")
  allr<-merge(allr,pop)
  probw = 0.5 
  var_w=probw*(1-probw)
  x1_mean=0 
  x1_sd=1 
  var_x1=x1_sd^2
  x2_pro1=0.5 
  var_x2=x2_pro1*(1-x2_pro1)
  x3_pro1=0.75
  var_x3=x3_pro1*(1-x3_pro1)
  
  allr[which(allr$Para=="b01"&allr$Ef=="nonef"),"pop"]<-0
  if(s<3){
    icc<-allr[which(allr$Para=="re_yw"),"Icc"]
    var_tot<-13.801   #?慰?McNeish (2016)
    var_yb<-var_tot*icc
    var_yw<-var_tot-var_yb
    yj_resid<-var_yb-b01^2*var_w
    yij_resid<-var_yw-(b10^2*var_x1+b11^2*(var_w+var_x1)+(s00+var_x1)+
                           b20^2*var_x2+b21^2*(var_w+var_x2)+(s00+var_x2)+
                           b30^2*var_x3+b31^2*(var_w+var_x3)+(s00+var_x3))
    allr[which(allr$Para=="re_yb"),"pop"]<-yj_resid
    allr[which(allr$Para=="re_yw"),"pop"]<-yij_resid
  }
  if(s>=3){
    yij_resid=1
    if(s==3){
      icc<-allr[which(allr$Para=="re_yb"),"Icc"]
      var_yw<-yij_resid+(b10^2*var_x1+b11^2*(var_w+var_x1)+(s00+var_x1)+
                           b20^2*var_x2+b21^2*(var_w+var_x2)+(s00+var_x2)+
                           b30^2*var_x3+b31^2*(var_w+var_x3)+(s00+var_x3))
      var_yb=var_yw*icc/(1-icc)
      yj_resid<-var_yb-b01^2*var_w
      allr[which(allr$Para=="re_yb"),"pop"]<-yj_resid
      allr[which(allr$Para=="re_yw"),"pop"]<-yij_resid
    }
    if(s==4){
      ##var_yw<-yij_resid+b10^2*var_x1+b20^2*var_x2+b30^2*var_x3
      yj_resid<-1
      allr[which(allr$Para=="re_yb"),"pop"]<-yj_resid
      allr[which(allr$Para=="re_yw"),"pop"]<-yij_resid
    }
  }
  
  #converged rate
  conver<-allr[allr$Para=="b00",]
  conver<-aggregate(as.double(conver$repi),list(conver$Ef,conver$Skew,conver$Icc,
                                     conver$L2,conver$L1,conver$Esti),
                    length)
  colnames(conver)<-c("Ef","Skew","Icc","L2","L1","Esti","succ_num")
  conver$convrate<-conver$succ_num/NR
  
  setwd(resultwd)
  #write.csv(conver, file = paste("Converge Rate for",wdID,studyType,".csv"),row.names = F)
  
  #==========="RB","SE_SD","MSE","95Coverage","Power"===========
    paramr<-allr
    estsd<-aggregate(paramr$est,list(paramr$Para,paramr$Ef,
                                     paramr$Skew,paramr$Icc,paramr$L2,paramr$L1,paramr$Esti,
                                     paramr$direction,paramr$bias,paramr$var,paramr$pop),sd)
    colnames(estsd)<-c("Para","Ef","Skew","Icc","L2","L1","Esti",
                       "direction","bias","var","pop","estsd")
    presult<-merge(paramr,estsd)
    presult<-merge(presult,conver)
    m_bias<-distinct(presult %>% 
           group_by(Para,Ef,Skew,Icc,L2,L1,Esti) %>% 
           summarise(m_bias=mcse_bias(est,succ_num)))
    presult$MSE<-(presult$est-presult$pop)^2
    m_mse<-presult %>% 
      group_by(Para,Ef,Skew,Icc,L2,L1,Esti) %>% 
      summarise(m_mse=mcse_mse(MSE,est,succ_num))
    mcse_result<-merge(m_bias,m_mse)
    presult$Coverage<-(presult$CID<presult$pop)&(presult$CIU>presult$pop)
    presult$Power<-1-((presult$CID<=0)&(presult$CIU>=0))
    
  # mean repitations (for plotting)
  repimean<-aggregate(presult[,c("estsd","Coverage","Power","succ_num")], 
                   list(presult$Para,presult$Ef,presult$Skew,presult$Icc,presult$L2,
                        presult$L1,presult$Esti,presult$direction,presult$bias,
                        presult$var),mean)
  colnames(repimean)<-c("Para","Ef","Skew","Icc","L2","L1","Esti","direction","bias","var",
                        "estsd","Coverage","Power","succ_num")
  repimean[,c("estsd","Coverage","Power","succ_num")]<-
    round(repimean[,c("estsd","Coverage","Power","succ_num")],3)
  
  #???莼??芙?????????
  mcse_result$m_se<-mcse_se(repimean$estsd,repimean$succ_num)
  mcse_result$m_coverage<-mcse_coverage(repimean$Coverage,repimean$succ_num)
  mcse_result$m_power<-mcse_power(repimean$Power,repimean$succ_num)
  write.csv(mcse_result, file = paste("Summarized MCMC error Result for",wdID,studyType,".csv"),row.names = F)
}
# ======
#鏁寸悊缁撴灉
library(xlsx)
wdID = 1
studyTypes<-c("study1_aftericc", "study2_aftericc","study3","study4") 
setwd("D:/study/current/姣曡/妯℃嫙鏁版嵁/AllResults")
summary_dat <- data.frame()
for (studyType in studyTypes){
  mcse_result <- read.csv(paste("Summarized MCMC error Result for",wdID,studyType,".csv"))
  max_dat <- apply(mcse_result[,c("m_bias", "m_mse", "m_se", "m_coverage", "m_power")],2,max)
  min_dat <- apply(mcse_result[,c("m_bias", "m_mse", "m_se", "m_coverage", "m_power")],2,min)
  median_dat <- apply(mcse_result[,c("m_bias", "m_mse", "m_se", "m_coverage", "m_power")],2,median)
  tmp_dat <- round(rbind(min_dat, median_dat, max_dat),3)
  rownames(tmp_dat) <- paste(studyType,c("min","median","max"))
  summary_dat <- rbind(summary_dat, tmp_dat)
}
write.xlsx(summary_dat, file = "Summarized MCMC error Results.xlsx")

===============other pl ot & analysis======== =================(1)#for 2,chage the Icc
for (s in c(3,4)){
mixed<-T #T??示study2??图??时??????态???莼?????????态????
slim<-F #T??示study2??图??时??只要??neg????pos
report<-c("m_bias","m_se","m_mse","m_coverage","m_power")
studyTypes<-c("study1_aftericc", "study2_aftericc","study3","study4") 
#wd0<-"C:/Users/TEMP/Desktop/shufang/1 ????/模??????/"
wd0<-"D:/study/current/????/模??????/"
resultwd<-paste(wd0,"AllResults",sep="")
picwd<-paste(resultwd,"pic/",sep="/")
Icc<-c(0.05,0.1,0.2)
if (wdID==1){
  Lev2N <- c(20,30,40,50)
  Lev1N <- c(30,60,150)
}
if (wdID==2){
  param<-c("l_yw1","l_yw2","l_yw3","l_xw1","l_xw2","l_xw3",
           "var_xij","res_X1","res_X2","res_X3","res_Y1","res_Y2","res_Y3","res_yij",
           "l_yb1","l_yb2","l_yb3","l_xb1","l_xb2","l_xb3",
           "b01","b21","b11","mW1J","intc_X1","intc_X2","intc_X3","intc_Y1",
           "intc_Y2","intc_Y3","b10","vW1j","var_xj",
           "res_X1b","res_X2b","res_X3b","res_Y1b","res_Y2b","res_Y3b","res_yj","res_b1j")
  pp<-1:length(param) #
  Lev2N <- c(40,50)
  Lev1N <- c(30,60)
}
NewEstiLable<-c("M\nL\nR","W\nL\nS","B\nD","L\n3\nW","L\n1\nW","C\nW","R\n1\nW","R\n3\nW",
                "L\n3\nM","L\n1\nM","C\nM","R\n1\nM","R\n3\nM","L\n3\nS",
                "L\n1\nS","C\nS","R\n1\nS","R\n3\nS")
NewEstiLevel<-c("ml","wlsmv","nonif","l_3sd_w","l_1sd_w","cor_w","r_1sd_w","r_3sd_w",
                "l_3sd_m","l_1sd_m","cor_m","r_1sd_m","r_3sd_m","l_3sd_s",
                "l_1sd_s","cor_s","r_1sd_s","r_3sd_s")


if(wdID==1&s!=3){
  param<-c("re_yw","b11","b21","b31","b01","b00",
           "b10","b20","b30","re_yb","g10^2","g20^2","g30^2")
  pp<-1:length(param) # set pp for params painted
}
if(wdID==1&s==3){ 
  param<-c("b11","b21","b31","b01","b10",
           "b20","b30","b00","re_yb","g10^2","g20^2","g30^2")
  pp<-1:length(param)
}
if(wdID==1&s==4){  
  param<-c("b10","b20","b30","b01","b00","re_yb")
  pp<-1:length(param)
}
studyType<-studyTypes[s]
setwd(resultwd)
LongResult<-read.csv(file = paste("Summarized Result for",wdID,studyType,".csv"))
if(s==2&mixed){
  LongResult1<-read.csv(file = paste("Summarized Result for",wdID,studyTypes[1],".csv"))
  LongResult<-rbind(LongResult1,LongResult)
  if(slim){
    LongResult<-rbind(LongResult1,LongResult[which(LongResult$Skew=='neg'),])
  }
}
# ggplot
for (r in 1:length(report)){#r<-4
  for (p in pp){#p<-5
    if(nrow(LongResult[which((LongResult$Para==param[p])
                             &(LongResult$Report==report[r])),])!=0){
      data<-LongResult[which((LongResult$Para==param[p])
                             &(LongResult$Report==report[r])),]
      data$Esti<-factor(data$Esti,levels=NewEstiLevel,labels=NewEstiLable)
      data$L2<-factor(data$L2,levels=Lev2N,labels=paste("NL2 =",Lev2N))
      data$L1<-factor(data$L1,levels=Lev1N,labels=paste("NL1 =",Lev1N))
      data$Icc<-factor(data$Icc,levels=Icc,labels=paste("ICC =",Icc))
      #data$Skew<-factor(data$Skew)
      title<-paste(report[r],"for",param[p])
      
      picwd2<-paste(picwd,wdID," ",studyType,"/",report[r],sep = "")
      if(s!=2){
        dir.create(paste(picwd,wdID," ",studyType," new",sep = ""))
        picwd2<-paste(picwd,wdID," ",studyType," new/",report[r],sep = "")
      }
      if(s==2){
        if(mixed){
          if(!slim){
            dir.create(paste(picwd,wdID," ",studyType," mixed",sep = ""))
            picwd2<-paste(picwd,wdID," ",studyType," mixed/",report[r],sep = "")
          }
          
          if(slim){
            dir.create(paste(picwd,wdID," ",studyType," mixed&slim",sep = ""))
            picwd2<-paste(picwd,wdID," ",studyType," mixed&slim/",report[r],sep = "")
          }
        }
        if(!mixed){
          if(!slim){
            dir.create(paste(picwd,wdID," ",studyType," nomixed",sep = ""))
            picwd2<-paste(picwd,wdID," ",studyType," nomixed/",report[r],sep = "")
          }
          
          if(slim){
            dir.create(paste(picwd,wdID," ",studyType," nomixed&slim",sep = ""))
            picwd2<-paste(picwd,wdID," ",studyType," nomixed&slim/",report[r],sep = "")
          }
        }
      }
      dir.create(picwd2)
      setwd(picwd2)
      
      tiff(file = paste0(title," of ",studyType,"_",wdID,".tiff"),
           width=4500,height=2250,res = 300)
      
      if (wdID==1&s!=2){
        pic<-ggplot(data, 
                    aes(x=Esti, y=Value, colour=Icc, shape=Icc, group=Icc))+ 
          xlab("Estimator") + ylab(report[r])+
          scale_colour_manual(values=c("#f17c67","#008573","#404040"))+
          scale_shape_manual(values=c(15,16,17))+
          facet_grid(L2 ~ L1)+
          theme(legend.position="bottom")+
          geom_line(colour="#191970")+
          geom_point(size=2.5)+
          ggtitle(title)+
          theme(plot.title = element_text(hjust = 0.5))+
          guides(colour=guide_legend(title=NULL),shape=guide_legend(title=NULL))
        if(report[r]=="RB"){
          pic<-pic+geom_hline(yintercept=0,linetype=3,colour="darkgreen")+
            geom_hline(yintercept=-10,linetype=4,colour="darkred")+
            geom_hline(yintercept=10,linetype=4,colour="darkred")
        }
        if (report[r]=="95Coverage"){
          pic<-pic+geom_hline(yintercept=0.9,linetype=3,colour="darkred")+
            geom_hline(yintercept=0.95,linetype=4,colour="darkgreen")
        }
        if (report[r]=="SE_SD"){#
          pic<-pic+geom_hline(yintercept=1,linetype=3,colour="darkgreen")+
            geom_hline(yintercept=0.9,linetype=4,colour="darkred")+
            geom_hline(yintercept=1.1,linetype=4,colour="darkred")
        }
        print(pic)
      }
      
      if (wdID==1&s==2){
        data$Skew<-factor(data$Skew)##
        data$groupv<-paste(data$Icc,data$Skew)
        pic<-ggplot(data, 
                    aes(x=Esti, y=Value, colour=Icc, shape=Skew, linetype=Skew, group=groupv))+
          xlab("Estimator") + ylab(report[r])+
          labs(linetype="skew",shape="skew")+
          scale_colour_manual(values=c("#f17c67","#008573","#404040"))+
          scale_shape_manual(values=c(15,16,17))+
          scale_linetype_manual(values=c(1,2,6))+
          facet_grid(L2 ~ L1)+
          theme(legend.position="bottom")+
          geom_line()+
          geom_point(size=2.5)+
          ggtitle(title)+
          theme(plot.title = element_text(hjust = 0.5))+
          guides(colour=guide_legend(title=NULL))
        if(report[r]=="RB"){
          pic<-pic+geom_hline(yintercept=0,linetype=3,colour="darkgreen")+
            geom_hline(yintercept=-10,linetype=4,colour="darkred")+
            geom_hline(yintercept=10,linetype=4,colour="darkred")
        }
        if (report[r]=="95Coverage"){
          pic<-pic+geom_hline(yintercept=0.90,linetype=3,colour="darkred")+
            geom_hline(yintercept=0.95,linetype=4,colour="darkgreen")
        }
        if (report[r]=="SE_SD"){
          pic<-pic+geom_hline(yintercept=1,linetype=3,colour="darkgreen")+
            geom_hline(yintercept=0.9,linetype=4,colour="darkred")+
            geom_hline(yintercept=1.1,linetype=4,colour="darkred")
        }
        print(pic)
      }
      dev.off()
    }
  }
}
}
